<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.backend.deliveryweb">
    <select id="login" parameterType="com.backend.deliveryweb.vo.Users" resultType="int">
        select count(*)
        from "Users"
        where "userid" = #{userid}
          and "password" = #{password}
    </select>

    <select id="session" parameterType="String" resultType="map">
        select "userid", "role"
        from "Users"
        where "userid" = #{userid}
    </select>

    <select id="userInfo" parameterType="String" resultType="map">
        select *
        from "Users"
        where "userid" = #{userid}
    </select>

    <select id="category" parameterType="int" resultType="map">
        SELECT distinct "category"
        FROM "Stores"
        where "type" = #{type}
        order by "category" desc
    </select>

    <select id="getDeliveryStores" parameterType="String" resultType="map">
        select *
        from "Stores"
        where "category" = #{category}
          and "type" = 0
    </select>

    <select id="getStores" parameterType="String" resultType="map">
        select *
        from "Stores"
        where "storeid" = #{storeid}
    </select>

    <select id="getMenu" parameterType="String" resultType="map">
        select m.*, i."menuPictureUrl", i."menuImgSize", i."menuImgName"
        from "Menu" m
                 left join "MenuImage" i on m."menuid" = i."menuid"
        where "storeid" = #{storeid}
    </select>

    <select id="getOption" parameterType="String" resultType="map">
        select "menuOptionId", "menuid", "option", "content", "price"
        from "MenuOption"
        where "menuid" = #{menuid}
    </select>

    <select id="checkCart" parameterType="com.backend.deliveryweb.vo.Carts" resultType="int">
        select count(*)
        from "Carts"
        where "userid" = #{userid}
        and "storeid" = #{storeid}
        and "menuid" = #{menuid}
        and "menuOptionId" = #{menuOptionId}
    </select>

    <update id="plusQuantity" parameterType="com.backend.deliveryweb.vo.Carts">
        UPDATE "Carts"
        SET "quantity" = "quantity" + #{quantity}
        WHERE "userid" = #{userid}
          AND "storeid" = #{storeid}
          AND "menuid" = #{menuid}
          AND "menuOptionId" = #{menuOptionId}
    </update>

    <delete id="deleteCart" parameterType="String">
        delete
        from "Carts"
        where "userid" = #{userid}
    </delete>

    <insert id="cart" parameterType="com.backend.deliveryweb.vo.Stores">
        insert into "Carts"
        values (SEQ_CARTID.nextval,
                #{userid},
                #{storeid},
                #{menuid},
                #{menuOptionId},
                #{quantity})
    </insert>

    <select id="getCart" parameterType="String" resultType="map">
        SELECT
            m."menuName" AS "menuName",
            o."option" AS "op",
            (m."price" + o."price") AS "price",
            c."quantity",
            c."cartid",
            SUM((m."price" + o."price") * c."quantity") OVER () AS "SUM",
                s."name", s."storeid"
        FROM
            "Carts" c
                INNER JOIN
            "Menu" m ON m."menuid" = c."menuid"
                INNER JOIN
            "MenuOption" o ON c."menuOptionId" = o."menuOptionId"
                INNER JOIN
            "Stores" s ON c."storeid" = s."storeid"
        WHERE
            c."userid" = #{userid}
    </select>

    <select id="cartMenu" parameterType="String" resultType="map">
        select *
        from "Menu"
        where "menuid" = #{menuid}
    </select>

    <select id="cartMenuOption" parameterType="String" resultType="map">
        select *
        from "MenuOption"
        where "menuOptionId" = #{menuOptionId}
    </select>

    <insert id="deliveryPay" parameterType="com.backend.deliveryweb.vo.Orders">
        insert into "Orders"
        values (SEQ_ORDERID.nextval,
                #{storeid},
                #{userid},
                #{paymentMethod},
                #{totalPrice},
                #{requests},
                sysdate,
                #{status},
                #{orderName})
    </insert>

    <select id="orderList" parameterType="String" resultType="map">
        select s."name",
               o."orderName",
               o."totalPrice",
               o."status",
               to_char(o."orderTime", 'MM"월" DD"일" HH24:MI') orderTime,
               s."storeid",
               o."orderid",
               count(r."reviewid") as                        cnt
        from "Orders" o
                 inner join "Stores" s
                            on s."storeid" = o."storeid"
                 left join "Reviews" r
                           on o."orderid" = r."orderid"
        where o."userid" = #{userid}
        GROUP BY s."name",
                 o."orderName",
                 o."totalPrice",
                 o."status",
                 to_char(o."orderTime", 'MM"월" DD"일" HH24:MI'),
                 s."storeid",
                 o."orderid"
        order by o."status", orderTime desc
    </select>

    <select id="getOrder" parameterType="String" resultType="map">
        select o."orderName", s."name", s."storeid", o."orderid"
        from "Orders" o
                 inner join "Stores" s
                            on s."storeid" = o."storeid"
        where "orderid" = #{orderid}
    </select>

    <insert id="reviewWrite" parameterType="com.backend.deliveryweb.vo.Reviews">
        insert into "Reviews"("reviewid",
                              "storeid",
                              "userid",
                              "rating",
                              "content",
                              "reviewPictureUrl",
                              "createdDate",
                              "modifiedDate",
                              "status",
                              "orderName",
                              "orderid")
        values (SEQ_REVIEWS.nextval,
                #{storeid},
                #{userid},
                #{rating},
                #{content},
                #{reviewPictureUrl},
                sysdate,
                sysdate,
                0,
                #{orderName},
                #{orderid})
    </insert>

    <select id="reviewList" parameterType="String" resultType="map">
        select r."content",
               r."orderName",
               to_char(r."createdDate", 'MM"월" DD"일" HH24:MI') createdDate,
               u."nickname",
               r."rating"
        from "Reviews" r
                 inner join "Users" u
                            on u."userid" = r."userid"
        where "storeid" = #{storeid}
    </select>

    <select id="reviewCount" parameterType="String" resultType="map">
        SELECT COUNT(*)                                      AS cnt,
               SUM(CASE WHEN "rating" = 5 THEN 1 ELSE 0 END) AS five,
               SUM(CASE WHEN "rating" = 4 THEN 1 ELSE 0 END) AS four,
               SUM(CASE WHEN "rating" = 3 THEN 1 ELSE 0 END) AS three,
               SUM(CASE WHEN "rating" = 2 THEN 1 ELSE 0 END) AS two,
               SUM(CASE WHEN "rating" = 1 THEN 1 ELSE 0 END) AS one,
               round(avg("Reviews"."rating"), 1) AS AVG
        FROM "Reviews"
        WHERE "storeid" = #{storeid}
    </select>

    <select id="userAdr" parameterType="String" resultType="String">
        select "address"
        from "Users"
        where "userid" = #{userid}
    </select>

    <delete id="cartDeleteMenu" parameterType="String">
        delete "Carts" WHERE "cartid" = #{cartid}
    </delete>

    <select id="orderDetail" parameterType="String" resultType="map">
        select s."address" storeadr, u."address" useradr, o."status", o."totalPrice", o."orderName", o."paymentMethod", o."requests", to_char(o."orderTime", 'MM"월" DD"일" HH24:MI') ordertime, s."phone" sphone, u."phone" uphone,
               s."name" storename, s."storeid", u."userid"
        from "Orders" o
                 inner join "Stores" s on s."storeid" = o."storeid"
                 inner join "Users" u on o."userid" = u."userid"
        where "orderid" = #{orderid}
    </select>

</mapper>